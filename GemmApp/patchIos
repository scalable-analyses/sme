diff --git a/src/libxsmm_malloc.c b/src/libxsmm_malloc.c
index c7af3d3fa..a0681f188 100644
--- a/src/libxsmm_malloc.c
+++ b/src/libxsmm_malloc.c
@@ -1993,9 +1993,9 @@ LIBXSMM_API int libxsmm_xmalloc(void** memory, size_t size, size_t alignment,
         if (MAP_FAILED != buffer && NULL != buffer) {
           internal_xmalloc_mhint(buffer, alloc_size);
 # if defined(__APPLE__) && defined(__arm64__)
-          if (0 != (LIBXSMM_MALLOC_FLAG_W & flags)) {
-            pthread_jit_write_protect_np(0/*false*/);
-          }
+          // if (0 != (LIBXSMM_MALLOC_FLAG_W & flags)) {
+          //   pthread_jit_write_protect_np(0/*false*/);
+          // }
 # endif
         }
 #endif /* !defined(_WIN32) */
@@ -2220,7 +2220,7 @@ LIBXSMM_API_INTERN int libxsmm_malloc_xattrib(void* buffer, int flags, size_t si
 #if defined(_WIN32)
       /* TODO: implement memory protection under Microsoft Windows */
 #else /* treat memory protection errors as soft error; ignore return value */
-# if defined(__APPLE__) && defined(__arm64__)
+# if defined(__APPLE__) && defined(__arm64__) && 0
       if (0 == (LIBXSMM_MALLOC_FLAG_W & flags)) {
         pthread_jit_write_protect_np(1/*true*/);
       }
@@ -2322,9 +2322,9 @@ LIBXSMM_API_INTERN int libxsmm_malloc_attrib(void** memory, int flags, const cha
 # endif   /* treat memory protection errors as soft error; ignore return value */
           munmap(buffer, alloc_size);
 # if defined(__APPLE__) && defined(__arm64__)
-          if (0 == (LIBXSMM_MALLOC_FLAG_W & flags)) {
-            pthread_jit_write_protect_np(1/*true*/);
-          }
+          // if (0 == (LIBXSMM_MALLOC_FLAG_W & flags)) {
+          //   pthread_jit_write_protect_np(1/*true*/);
+          // }
 # endif
 #endif
         }
diff --git a/CMakeLists.txt b/CMakeLists.txt
index d2081dc84..e7ce063a8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -58,7 +58,7 @@ target_include_directories(xsmm PUBLIC ${XSMM_INCLUDE_DIRS})
 
 # https://github.com/libxsmm/libxsmm/tree/main#link-instructions
 # Please pass BLAS config by "-D__BLAS=0"
-# target_compile_definitions(xsmm PRIVATE __BLAS=0)
+target_compile_definitions(xsmm PRIVATE __BLAS=0)
 
 add_definitions(-DLIBXSMM_DEFAULT_CONFIG -U_DEBUG)
 
